% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gce8.R
\name{gce8}
\alias{gce8}
\alias{gce8_port}
\alias{gce8_name}
\alias{gce8_relays}
\alias{gce8_list}
\alias{gce8_open}
\alias{gce8_close}
\alias{gce8_ready}
\alias{gce8_cmd}
\alias{gce8_get}
\alias{gce8_set}
\title{Control a GCE Electronics USB 8 relays card}
\usage{
gce8_port(port = getOption("gce8_port"), name)

gce8_name(port = gce8_port())

gce8_relays(names, port = gce8_port(), name = gce8_name(port))

gce8_list()

gce8_open(port = gce8_port(), name = gce8_name(port))

gce8_close(port = gce8_port(), name = gce8_name(port))

gce8_ready(port = gce8_port(), name = gce8_name(port))

gce8_cmd(relay, on = TRUE, port = gce8_port(), name = gce8_name(port))

gce8_get(port = gce8_port(), name = gce8_name(port))

gce8_set(state = FALSE, port = gce8_port(), name = gce8_name(port))
}
\arguments{
\item{port}{The comm port to use (this is a virtual comm port using the FTDI
virtual port driver available for Windows, Mac OS and Linux). If a number (x)
is provided, the port is assumed to be 'comx', which is only a valid
assuption under Windows. Use fully qualified name on Linux or Mac).}

\item{name}{The name of the device. With \code{gce8_port()} it is used to retrieve
the corresponding port; with \code{gce8_open()}, it forces the name of the card to
use in R.}

\item{names}{A vector of eight character strings to use to define the name of
the eight relays. Missing data represent unused relays.}

\item{relay}{The number, or name of the relay to switch.}

\item{on}{Do we switch the relay on or off? Can be a boolean, 0/1 or "0"/"1".}

\item{state}{The state of the relays. Can be a vector of eight items
(otherwise, recycling rule applies), either boolean, integers 0/1, or
anything that automatically coerces into boolean. Missing values are accepted
and they will match relay that are not modified. The vector can also be
named, and in this case, names will be match to the names used for the 8
relays: R1-R8, or anything else specified using \code{gce8_relays()}.`}
}
\value{
Most functions return \code{TRUE} in case of success and \code{FALSE} or a
\code{try-error} object in case of failure., except:

\code{gce8_port()} and \code{gce8_name()} return the port and name of a card,

\code{gce8_list()} returns the list of currently connected cards,

\code{gce8_relays()} returns a vector of eight character strings with the name of
the eight relays (dot . substituted for missing values)

\code{gce8_get()} returns a named vector of eight booleans indicating the state
of the eight relays. Names are the current names of the relays, or the
default names R1-R8.
}
\description{
Switch individual channels on or off in the USB interface card, or read its
current state.
}
\note{
Functions \code{gce8_cmd()}, \code{gce8_get()} and \code{gce8_set()} functions use a
mechanism to reconnect in case of lost connection. For instance, if the USB
cord is unplugged and plugged again, connection is lost, but these functions
can recover it. It only takes about 1 sec more to replug the card. If you
forgot to connect with \code{gce8_open()}, these functions will do this
automatically for you. However, you should always use \code{gce8_close()} once you
have done with the card, in order to free the comm port handle. This will
works too if the main power of the card in shut off and on again, but take
care that all relays do return in off state and your program is not
necessarily aware of that situation, unless you use \code{gce8_get()}. For
critical applications, do prefer using \code{gce8_set()} and always specify all
eight relays state instead of using \code{gce8_cmd()}.

Those cards come from \href{http://gce-electronics.com/fr/11-usb}{GCE Electronics}.
}
\examples{
\dontrun{
# If the USB interface card is connected to com5, this should work:
options(gce8_port = 5)
# On the Mac, use: options(gce8_port = "/dev/cu.usbserial-A4003CDu")
gce8_open() # Note that this is facultative, since I connect on first use!
gce8_cmd(5, 1)
gce8_get()
gce8_set(FALSE)
gce8_close() # On the other hand, this is required to free the port!
}
}
\seealso{
\code{\link[=wtw_open]{wtw_open()}}, \code{\link[=iks_open]{iks_open()}}
}
\author{
Philippe Grosjean \email{Philippe.Grosjean@umons.ac.be}
}
\concept{Hardware control}
\keyword{utilities}
